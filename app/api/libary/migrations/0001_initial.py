# Generated by Django 5.1.8 on 2025-04-06 03:44

import api.libary.models
import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Artist",
                "verbose_name_plural": "Artists",
            },
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Author",
                "verbose_name_plural": "Authors",
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=7, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categorys",
            },
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "chapter_id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.CharField(max_length=500, verbose_name="Name")),
                (
                    "title",
                    models.CharField(blank=True, max_length=5000, verbose_name="Title"),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=5000,
                        null=True,
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "spider",
                    models.CharField(blank=True, max_length=500, verbose_name="Spider"),
                ),
                (
                    "link",
                    models.URLField(blank=True, max_length=5000, verbose_name="Link"),
                ),
                ("updated_at", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("numimages", models.PositiveIntegerField(verbose_name="Total Images")),
            ],
            options={
                "verbose_name": "Chapter",
                "verbose_name_plural": "Chapters",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="ComicImage",
            fields=[
                (
                    "comic_image_id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "link",
                    models.URLField(blank=True, max_length=5000, verbose_name="Link"),
                ),
                (
                    "image",
                    models.ImageField(
                        max_length=5000,
                        upload_to=api.libary.models.comic_location,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                [
                                    "ico",
                                    "jpg",
                                    "svg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "bmp",
                                    "webp",
                                    "tiff",
                                    "ttf",
                                    "eot",
                                    "woff",
                                    "woff2",
                                ]
                            )
                        ],
                        verbose_name="Image",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("downloaded", "Downloaded"),
                            ("uptodate", "Uptodate"),
                            ("cached", "Cached"),
                        ],
                        default="downloaded",
                        max_length=13,
                    ),
                ),
            ],
            options={
                "verbose_name": "Comic Image",
                "verbose_name_plural": "Comic Images",
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", django_ckeditor_5.fields.CKEditor5Field(verbose_name="Text")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Genre",
                "verbose_name_plural": "Genres",
            },
        ),
        migrations.CreateModel(
            name="UserItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order", models.PositiveIntegerField(verbose_name="Order")),
            ],
            options={
                "verbose_name": "Useritem",
                "verbose_name_plural": "Useritems",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ChapterImage",
            fields=[
                (
                    "chapter_image_id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "link",
                    models.URLField(blank=True, max_length=5000, verbose_name="Link"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=5000,
                        null=True,
                        upload_to=api.libary.models.panel_location,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                [
                                    "ico",
                                    "jpg",
                                    "svg",
                                    "jpeg",
                                    "png",
                                    "gif",
                                    "bmp",
                                    "webp",
                                    "tiff",
                                    "ttf",
                                    "eot",
                                    "woff",
                                    "woff2",
                                ]
                            )
                        ],
                        verbose_name="Image",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("downloaded", "Downloaded"),
                            ("uptodate", "Uptodate"),
                            ("cached", "Cached"),
                        ],
                        default="downloaded",
                        max_length=13,
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapterimages",
                        to="libary.chapter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Chapter Image",
                "verbose_name_plural": "Chapter Images",
            },
        ),
        migrations.CreateModel(
            name="Comic",
            fields=[
                (
                    "comic_id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=5000, unique=True, verbose_name="Title"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        max_length=5000,
                        null=True,
                        unique=True,
                        verbose_name="Slug",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("completed", "Completed"),
                            ("ongoing", "Ongoing"),
                            ("hiatus", "Hiatus"),
                            ("dropped", "Dropped"),
                            ("season end", "Season End"),
                            ("coming soon", "Coming Soon"),
                        ],
                        default="ongoing",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=1, max_digits=10, verbose_name="Rating"
                    ),
                ),
                (
                    "serialization",
                    models.CharField(
                        blank=True, max_length=5000, verbose_name="Serialization"
                    ),
                ),
                (
                    "numchapters",
                    models.PositiveIntegerField(verbose_name="Total Chapters"),
                ),
                (
                    "spider",
                    models.CharField(blank=True, max_length=500, verbose_name="Spider"),
                ),
                (
                    "link",
                    models.URLField(blank=True, max_length=5000, verbose_name="Link"),
                ),
                ("numimages", models.PositiveIntegerField(verbose_name="Total Images")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateField()),
                (
                    "artist",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="comicartist",
                        to="libary.artist",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="comicauthor",
                        to="libary.author",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comiccategory",
                        to="libary.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comic",
                "verbose_name_plural": "Comics",
                "ordering": ["-updated_at"],
            },
        ),
    ]
